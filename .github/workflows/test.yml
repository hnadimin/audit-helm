---
name: kube-test
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
jobs:
  kube-test:
    strategy:
      matrix:
        scenario: [nonroot, rootuser]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          cluster_name: kind

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
      
      #- name: Load audittail image into kind cluster
      #run: kind load docker-image ghcr.io/metal-toolbox/audittail:latest
      
      - name: Create Namespace
        run: kubectl create namespace ${{ matrix.scenario }}
      
      - name: Deploy test scenario
        run: helm dependency update ./kube_scenario/ && helm template kubescenario -s templates/${{ matrix.scenario }}.yml ./kube_scenario/ | kubectl apply -f - -n ${{ matrix.scenario }}

      - name: Wait for readiness
        run: kubectl wait --for=condition=ready --timeout=60s -n ${{ matrix.scenario }} pod myapp
      
      - name: Get pod information
        run: kubectl describe -n ${{ matrix.scenario }} pod myapp
      
      - name: Get logs
        id: logs
        run: |
          kubectl logs -n ${{ matrix.scenario }} myapp -c audittail
          echo "::set-output name=auditlog::$(kubectl logs -n ${{ matrix.scenario }} myapp -c audittail)"
      
      - name: Inspect logs
        run: echo ${{ steps.logs.outputs.auditlog }}
      
      - name: Check logs
        run: |
          echo ${{ steps.logs.outputs.auditlog }} | grep "This is an audit log"
          echo ${{ steps.logs.outputs.auditlog }} | grep "This is an audit log" | wc -l | grep 1
